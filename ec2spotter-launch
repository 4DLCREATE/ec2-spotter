#!/bin/bash

# "Phase 1" this is the user-facing script for launching a new spot istance

if [ "$1" = "" ]; then echo "USER ERROR: please specify a configuration file"; exit -1; fi

. $1 || exit -1
ROOT_VOL_NAME=$ec2spotter_volume_name
# Desired launch zone
LAUNCH_ZONE=$ec2spotter_launch_zone
# Region is LAUNCH_ZONE minus the last character
LAUNCH_REGION=$(echo $LAUNCH_ZONE | sed -e 's/.$//')
PUB_KEY=$ec2spotter_key_name

echo "ROOT_VOL_NAME=${ROOT_VOL_NAME}; LAUNCH_ZONE=${LAUNCH_ZONE}; LAUNCH_REGION=${LAUNCH_REGION}; PUB_KEY=${PUB_KEY}"

if [ "$2" = "" ]; then echo "USER ERROR: please specify AWS credentials file"; exit -1; fi
export AWS_CREDENTIAL_FILE=$2
. AWS_CREDENTIAL_FILE
export AWS_ACCESS_KEY=$AWSAccessKeyId
export AWS_SECRET_KEY=$AWSSecretKey

aws ec2 describe-volumes \
	--filters Name=tag-key,Values="Name" Name=tag-value,Values="$ROOT_VOL_NAME" \
	--region ${LAUNCH_REGION} > volumes.tmp || exit -1

ROOT_ZONE=$(jq -r '.Volumes[0].AvailabilityZone' volumes.tmp)
ROOT_VOL=$(jq -r '.Volumes[0].VolumeId' volumes.tmp)
ROOT_TYPE=$(jq -r '.Volumes[0].VolumeType' volumes.tmp)

echo "ROOT_ZONE=${ROOT_ZONE}; ROOT_TYPE=$ROOT_TYPE; ROOT_VOL=$ROOT_VOL";

if [ "$ROOT_VOL_NAME" = "" ]
then
  echo "root volume lacks a Name tag";
  exit -1;
fi

cat >user-data.tmp <<EOF
#!/bin/sh
echo AWSAccessKeyId=$AWSAccessKeyId > /root/.aws.creds
echo AWSSecretKey=$AWSSecretKey >> /root/.aws.creds

apt-get install -y git

cd /root
git clone https://github.com/slavivanov/ec2-spotter.git

cd ec2-spotter
./ec2spotter-setup
./ec2spotter-remount-root --force ${ROOT_VOL_NAME} $ec2spotter_elastic_ip
EOF

userData=$(base64 user-data.tmp | tr -d '\n');

cat >specs.tmp <<EOF
{
  "ImageId" : "$ec2spotter_preboot_image_id",
  "InstanceType": "$ec2spotter_instance_type",
  "KeyName" : "$PUB_KEY",
  "EbsOptimized": true,
  "Placement": {
     "AvailabilityZone": "us-east-1c"
  },
  "BlockDeviceMappings": [
    {
      "DeviceName": "/dev/sda1",
      "Ebs": {
        "DeleteOnTermination": true,
        "VolumeType": "gp2",
        "VolumeSize": 8,
      }
    }
  ],
  "SecurityGroupIds": ["sg-28156654"],
  "SubnetId": "subnet-43b5b60a",
  "UserData" : "${userData}"
}
EOF

SPOT_REQUEST_ID = $(aws ec2 request-spot-instances --launch-specification file://specs.tmp --type persistent --spot-price $ec2spotter_bid_price --output="text" --query="SpotInstanceRequests[*].SpotInstanceRequestId" --region ${LAUNCH_REGION})
echo SPOT_REQUEST_ID=$SPOT_REQUEST_ID
# Clean up
# rm user-data.tmp
# rm specs.tmp
